<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
	
	<!-- Handeler Mapping for controllers -->	
	<context:component-scan base-package="com.demoh2.example" />
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	
	<!-- Enables the Spring annotation like Autowire,Qualifire,etc  -->
	<context:annotation-config />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<!-- Handeler Mapping for View resolver -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp' -->
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
<!-- If the classes are marked with stereo types annotation and contains dependency of object only then no need to
     declare that class with bean only scan the base package i.e. <context:component-scan base-package="com.demoh2.example"/>
     IOC container will creates it's objects.
    <bean id="employeeDaoImpl" class="com.demoh2.example.daoImpl.EmployeeDaoImpl"/>
	<bean id="employeeServiceImpl" class="com.demoh2.example.serviceImpl.EmployeeServiceImpl"/> -->
	
</beans>
